@Library('jenkins_shared_lib') _

pipeline{

    agent any

    parameters{

        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')        
        string(name: 'aws_account_id', description: " AWS Account ID", defaultValue: '319506457158')
        string(name: 'Region', description: "Region of ECR", defaultValue: 'us-west-2')
        string(name: 'ECR_REPO_NAME', description: "name of the ECR", defaultValue: 'vikashashoke')
        string(name: 'cluster', description: "name of the EKS Cluster", defaultValue: 'demo-cluster1')
        


    }
    environment{

        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_KEY_ID')
      
    }

    stages{

        
        stage('Git Checkout'){
        when { expression {  params.action == 'create' } }
            steps{
            gitCheckout(
                branch: "main",
                url: "https://github.com/Rietta1/java_app.git"
               )
             }

        }
        stage('Create EKS Cluster : Terraform'){
            when { expression {  params.action == 'create' } }
            steps{
                script{

                    dir('eks_module') {
                      sh """
                          
                          terraform init 
                          terraform plan -var 'access_key=$ACCESS_KEY' -var 'secret_key=$SECRET_KEY' -var 'region=${params.Region}' --var-file=./config/terraform.tfvars
                          terraform apply -var 'access_key=$ACCESS_KEY' -var 'secret_key=$SECRET_KEY' -var 'region=${params.Region}' --var-file=./config/terraform.tfvars --auto-approve
                      """
                  }
                }
            }
        }
        stage('Connect to EKS '){
            when { expression {  params.action == 'create' } }
            steps{

                script{

                    sh """
                    aws configure set aws_access_key_id "$ACCESS_KEY"
                    aws configure set aws_secret_access_key "$SECRET_KEY"
                    aws configure set region "${params.Region}"
                    aws eks --region ${params.Region} update-kubeconfig --name ${params.cluster}
                    """
                }
           }
        }
        stage('Deployment on EKS Cluster'){
            when { expression {  params.action == 'create' } }
            steps{
                script{
                  
                  def apply = false

                  try{
                    input message: 'please confirm to deploy on eks', ok: 'Ready to apply the config ?'
                    apply = true
                  }catch(err){
                    apply= false
                    currentBuild.result  = 'UNSTABLE'
                  }
                  if(apply){

                    sh """
                        kubectl apply -f .
                    """
                  }
                }
            }
        } 
        // stage('Delete Deployment on EKS Cluster'){
        //     when { expression {  params.action == 'delete' } }
        //     steps{
        //         script{
        //             def delete = false

        //             try{
        //                 input message: 'Please confirm to delete the deployment', ok: 'Ready to delete the deployment?'
        //                 delete = true
        //             }catch(err){
        //                 delete = false
        //                 currentBuild.result  = 'UNSTABLE'
        //             }

        //             if(delete){
        //                 sh """
        //                     // kubectl delete deployment <deployment_name>
        //                     //  or, if you used kubectl apply with a YAML file
        //                      kubectl delete -f deployment.yaml
        //                 """
        //             }
        //         }
        //     }
        // }
        // stage('Delete EKS Cluster : Terraform'){
        //     when { expression {  params.action == 'create' } }
        //     steps{
        //         script{
        //             dir('eks_module') {
        //                 sh """
        //                     terraform init 
        //                     terraform destroy -var 'access_key=$ACCESS_KEY' -var 'secret_key=$SECRET_KEY' -var 'region=${params.Region}' --var-file=./config/terraform.tfvars --auto-approve
        //                 """
        //             }
        //         }
        //     }
        // }







    }
}
